.TH "src/adder.c" 3 "Mon Mar 24 2014" "Version 0.95" "CUnit Test Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/adder.c \- 
.PP
A simple adder\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include 'lib\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBmain\fP (int argc, char **argv)"
.br
.RI "\fIBrief Description: main function runs the adder\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
A simple adder\&. 


.PP
\fBDate:\fP
.RS 4
3/20/14 
.RE
.PP
\fBAuthor:\fP
.RS 4
Owen Watson
.RE
.PP
.SS "Description"
.PP
This is the fucntion declaration for add\&. The fucntion adds two numbers together and returns the results\&. Quite possibly the most interesting code in the world\&. 
.PP
Definition in file \fBadder\&.c\fP\&.
.SH "Function Documentation"
.PP 
.SS "int main (intargc, char **argv)"

.PP
Brief Description: main function runs the adder\&. 
.SS "Description"
.PP
This is the amazing add fucntion in action\&. It takes two integer terms (e\&.g 4 and 7) and adds them together\&. This produces the sum of those two terms! Science at it's finest\&.
.PP
\fBParameters:\fP
.RS 4
\fIargc\fP (argument count) the number of arguments entered 
.br
\fIargv\fP (argument vector) an array of pointer to arrays of char objects
.RE
.PP
\fBReturns:\fP
.RS 4
zero\&.\&.\&. unless error occurs 
.RE
.PP

.PP
Definition at line 29 of file adder\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for CUnit Test Project from the source code\&.
